import {
  onMount
} from "./chunk-7NITXI4B.js";
import {
  append_styles,
  attr,
  bind_this,
  child,
  child_frag,
  class_name,
  class_toggle,
  close,
  close_frag,
  comment,
  component,
  each_keyed,
  event,
  get,
  if_block,
  mutable_source,
  onDestroy,
  open,
  open_frag,
  pop,
  pre_effect,
  prop,
  push,
  readonly,
  render_effect,
  set,
  sibling,
  slot,
  space,
  spread_attributes_effect,
  spread_props,
  store_get,
  stringify,
  style,
  template,
  text_effect,
  unsubscribe_on_destroy,
  untrack,
  unwrap,
  validate_component,
  validate_dynamic_component,
  validate_each_keys,
  validate_store
} from "./chunk-OJFEKOMR.js";
import "./chunk-IP2U24VQ.js";
import "./chunk-QKOF6TZO.js";
import {
  derived,
  get_store_value,
  writable
} from "./chunk-FWEJX3Y4.js";
import "./chunk-F3TNGEWF.js";
import "./chunk-NWA7Z6AD.js";
import "./chunk-OL7BDVYM.js";

// node_modules/svelte-writable-derived/index.mjs
function writableDerived(origins, derive, reflect, initial) {
  var childDerivedSetter, originValues, blockNextDerive = false;
  var reflectOldValues = reflect.length >= 2;
  var wrappedDerive = (got, set2, update3) => {
    childDerivedSetter = set2;
    if (reflectOldValues) {
      originValues = got;
    }
    if (!blockNextDerive) {
      let returned = derive(got, set2, update3);
      if (derive.length < 2) {
        set2(returned);
      } else {
        return returned;
      }
    }
    blockNextDerive = false;
  };
  var childDerived = derived(origins, wrappedDerive, initial);
  var singleOrigin = !Array.isArray(origins);
  function doReflect(reflecting) {
    var setWith = reflect(reflecting, originValues);
    if (singleOrigin) {
      blockNextDerive = true;
      origins.set(setWith);
    } else {
      setWith.forEach((value, i) => {
        blockNextDerive = true;
        origins[i].set(value);
      });
    }
    blockNextDerive = false;
  }
  var tryingSet = false;
  function update2(fn) {
    var isUpdated, mutatedBySubscriptions, oldValue, newValue;
    if (tryingSet) {
      newValue = fn(get_store_value(childDerived));
      childDerivedSetter(newValue);
      return;
    }
    var unsubscribe = childDerived.subscribe((value) => {
      if (!tryingSet) {
        oldValue = value;
      } else if (!isUpdated) {
        isUpdated = true;
      } else {
        mutatedBySubscriptions = true;
      }
    });
    newValue = fn(oldValue);
    tryingSet = true;
    childDerivedSetter(newValue);
    unsubscribe();
    tryingSet = false;
    if (mutatedBySubscriptions) {
      newValue = get_store_value(childDerived);
    }
    if (isUpdated) {
      doReflect(newValue);
    }
  }
  return {
    subscribe: childDerived.subscribe,
    set(value) {
      update2(() => value);
    },
    update: update2
  };
}

// node_modules/svelte-french-toast/dist/core/store.js
var TOAST_LIMIT = 20;
var toasts = writable([]);
var pausedAt = writable(null);
var toastTimeouts = /* @__PURE__ */ new Map();
var addToRemoveQueue = (toastId) => {
  if (toastTimeouts.has(toastId)) {
    return;
  }
  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId);
    remove(toastId);
  }, 1e3);
  toastTimeouts.set(toastId, timeout);
};
var clearFromRemoveQueue = (toastId) => {
  const timeout = toastTimeouts.get(toastId);
  if (timeout) {
    clearTimeout(timeout);
  }
};
function update(toast2) {
  if (toast2.id) {
    clearFromRemoveQueue(toast2.id);
  }
  toasts.update(($toasts) => $toasts.map((t) => t.id === toast2.id ? { ...t, ...toast2 } : t));
}
function add(toast2) {
  toasts.update(($toasts) => [toast2, ...$toasts].slice(0, TOAST_LIMIT));
}
function upsert(toast2) {
  if (get_store_value(toasts).find((t) => t.id === toast2.id)) {
    update(toast2);
  } else {
    add(toast2);
  }
}
function dismiss(toastId) {
  toasts.update(($toasts) => {
    if (toastId) {
      addToRemoveQueue(toastId);
    } else {
      $toasts.forEach((toast2) => {
        addToRemoveQueue(toast2.id);
      });
    }
    return $toasts.map((t) => t.id === toastId || toastId === void 0 ? { ...t, visible: false } : t);
  });
}
function remove(toastId) {
  toasts.update(($toasts) => {
    if (toastId === void 0) {
      return [];
    }
    return $toasts.filter((t) => t.id !== toastId);
  });
}
function startPause(time) {
  pausedAt.set(time);
}
function endPause(time) {
  let diff;
  pausedAt.update(($pausedAt) => {
    diff = time - ($pausedAt || 0);
    return null;
  });
  toasts.update(($toasts) => $toasts.map((t) => ({
    ...t,
    pauseDuration: t.pauseDuration + diff
  })));
}
var defaultTimeouts = {
  blank: 4e3,
  error: 4e3,
  success: 2e3,
  loading: Infinity,
  custom: 4e3
};
function useToasterStore(toastOptions = {}) {
  const mergedToasts = writableDerived(toasts, ($toasts) => $toasts.map((t) => {
    var _a, _b;
    return {
      ...toastOptions,
      ...toastOptions[t.type],
      ...t,
      duration: t.duration || ((_a = toastOptions[t.type]) == null ? void 0 : _a.duration) || (toastOptions == null ? void 0 : toastOptions.duration) || defaultTimeouts[t.type],
      style: [toastOptions.style, (_b = toastOptions[t.type]) == null ? void 0 : _b.style, t.style].join(";")
    };
  }), ($toasts) => $toasts);
  return {
    toasts: mergedToasts,
    pausedAt
  };
}

// node_modules/svelte-french-toast/dist/core/types.js
var isFunction = (valOrFunction) => typeof valOrFunction === "function";
var resolveValue = (valOrFunction, arg) => isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;

// node_modules/svelte-french-toast/dist/core/utils.js
var genId = (() => {
  let count = 0;
  return () => {
    count += 1;
    return count.toString();
  };
})();
var prefersReducedMotion = (() => {
  let shouldReduceMotion;
  return () => {
    if (shouldReduceMotion === void 0 && typeof window !== "undefined") {
      const mediaQuery = matchMedia("(prefers-reduced-motion: reduce)");
      shouldReduceMotion = !mediaQuery || mediaQuery.matches;
    }
    return shouldReduceMotion;
  };
})();

// node_modules/svelte-french-toast/dist/core/toast.js
var createToast = (message, type = "blank", opts) => ({
  createdAt: Date.now(),
  visible: true,
  type,
  ariaProps: {
    role: "status",
    "aria-live": "polite"
  },
  message,
  pauseDuration: 0,
  ...opts,
  id: (opts == null ? void 0 : opts.id) || genId()
});
var createHandler = (type) => (message, options) => {
  const toast2 = createToast(message, type, options);
  upsert(toast2);
  return toast2.id;
};
var toast = (message, opts) => createHandler("blank")(message, opts);
toast.error = createHandler("error");
toast.success = createHandler("success");
toast.loading = createHandler("loading");
toast.custom = createHandler("custom");
toast.dismiss = (toastId) => {
  dismiss(toastId);
};
toast.remove = (toastId) => remove(toastId);
toast.promise = (promise, msgs, opts) => {
  const id = toast.loading(msgs.loading, { ...opts, ...opts == null ? void 0 : opts.loading });
  promise.then((p) => {
    toast.success(resolveValue(msgs.success, p), {
      id,
      ...opts,
      ...opts == null ? void 0 : opts.success
    });
    return p;
  }).catch((e) => {
    toast.error(resolveValue(msgs.error, e), {
      id,
      ...opts,
      ...opts == null ? void 0 : opts.error
    });
  });
  return promise;
};
var toast_default = toast;

// node_modules/svelte-french-toast/dist/core/use-toaster.js
function calculateOffset(toast2, $toasts, opts) {
  const { reverseOrder, gutter = 8, defaultPosition } = opts || {};
  const relevantToasts = $toasts.filter((t) => (t.position || defaultPosition) === (toast2.position || defaultPosition) && t.height);
  const toastIndex = relevantToasts.findIndex((t) => t.id === toast2.id);
  const toastsBefore = relevantToasts.filter((toast3, i) => i < toastIndex && toast3.visible).length;
  const offset = relevantToasts.filter((t) => t.visible).slice(...reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]).reduce((acc, t) => acc + (t.height || 0) + gutter, 0);
  return offset;
}
var handlers = {
  startPause() {
    startPause(Date.now());
  },
  endPause() {
    endPause(Date.now());
  },
  updateHeight: (toastId, height) => {
    update({ id: toastId, height });
  },
  calculateOffset
};
function useToaster(toastOptions) {
  const { toasts: toasts2, pausedAt: pausedAt2 } = useToasterStore(toastOptions);
  const timeouts = /* @__PURE__ */ new Map();
  let _pausedAt;
  const unsubscribes = [
    pausedAt2.subscribe(($pausedAt) => {
      if ($pausedAt) {
        for (const [, timeoutId] of timeouts) {
          clearTimeout(timeoutId);
        }
        timeouts.clear();
      }
      _pausedAt = $pausedAt;
    }),
    toasts2.subscribe(($toasts) => {
      if (_pausedAt) {
        return;
      }
      const now = Date.now();
      for (const t of $toasts) {
        if (timeouts.has(t.id)) {
          continue;
        }
        if (t.duration === Infinity) {
          continue;
        }
        const durationLeft = (t.duration || 0) + t.pauseDuration - (now - t.createdAt);
        if (durationLeft < 0) {
          if (t.visible) {
            toast_default.dismiss(t.id);
          }
          return null;
        }
        timeouts.set(t.id, setTimeout(() => toast_default.dismiss(t.id), durationLeft));
      }
    })
  ];
  onDestroy(() => {
    for (const unsubscribe of unsubscribes) {
      unsubscribe();
    }
  });
  return { toasts: toasts2, handlers };
}

// node_modules/svelte-french-toast/dist/components/CheckmarkIcon.svelte
var frag = template(`<div class="svelte-11kvm4p"></div>`);
function CheckmarkIcon($$anchor, $$props) {
  if (new.target === CheckmarkIcon)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  let primary = prop($$props, "primary", 0, "#61d345");
  let secondary = prop($$props, "secondary", 0, "#fff");
  var div = open($$anchor, true, frag);
  render_effect(() => {
    style(div, "--primary", primary());
    style(div, "--secondary", secondary());
  });
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-11kvm4p", "\n	div.svelte-11kvm4p {\n		width: 20px;\n		opacity: 0;\n		height: 20px;\n		border-radius: 10px;\n		background: var(--primary, #61d345);\n		position: relative;\n		transform: rotate(45deg);\n		animation: svelte-11kvm4p-circleAnimation 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n		animation-delay: 100ms;\n	}\n\n	div.svelte-11kvm4p::after {\n		content: '';\n		box-sizing: border-box;\n		animation: svelte-11kvm4p-checkmarkAnimation 0.2s ease-out forwards;\n		opacity: 0;\n		animation-delay: 200ms;\n		position: absolute;\n		border-right: 2px solid;\n		border-bottom: 2px solid;\n		border-color: var(--secondary, #fff);\n		bottom: 6px;\n		left: 6px;\n		height: 10px;\n		width: 6px;\n	}\n\n	@keyframes svelte-11kvm4p-circleAnimation {\n		from {\n			transform: scale(0) rotate(45deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(45deg);\n			opacity: 1;\n		}\n	}\n\n	@keyframes svelte-11kvm4p-checkmarkAnimation {\n		0% {\n			height: 0;\n			width: 0;\n			opacity: 0;\n		}\n		40% {\n			height: 0;\n			width: 6px;\n			opacity: 1;\n		}\n		100% {\n			opacity: 1;\n			height: 10px;\n		}\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/ErrorIcon.svelte
var frag2 = template(`<div class="svelte-1ee93ns"></div>`);
function ErrorIcon($$anchor, $$props) {
  if (new.target === ErrorIcon)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  let primary = prop($$props, "primary", 0, "#ff4b4b");
  let secondary = prop($$props, "secondary", 0, "#fff");
  var div = open($$anchor, true, frag2);
  render_effect(() => {
    style(div, "--primary", primary());
    style(div, "--secondary", secondary());
  });
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-1ee93ns", "\n	div.svelte-1ee93ns {\n		width: 20px;\n		opacity: 0;\n		height: 20px;\n		border-radius: 10px;\n		background: var(--primary, #ff4b4b);\n		position: relative;\n		transform: rotate(45deg);\n		animation: svelte-1ee93ns-circleAnimation 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n		animation-delay: 100ms;\n	}\n\n	div.svelte-1ee93ns::after,\n	div.svelte-1ee93ns::before {\n		content: '';\n		animation: svelte-1ee93ns-firstLineAnimation 0.15s ease-out forwards;\n		animation-delay: 150ms;\n		position: absolute;\n		border-radius: 3px;\n		opacity: 0;\n		background: var(--secondary, #fff);\n		bottom: 9px;\n		left: 4px;\n		height: 2px;\n		width: 12px;\n	}\n\n	div.svelte-1ee93ns:before {\n		animation: svelte-1ee93ns-secondLineAnimation 0.15s ease-out forwards;\n		animation-delay: 180ms;\n		transform: rotate(90deg);\n	}\n\n	@keyframes svelte-1ee93ns-circleAnimation {\n		from {\n			transform: scale(0) rotate(45deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(45deg);\n			opacity: 1;\n		}\n	}\n\n	@keyframes svelte-1ee93ns-firstLineAnimation {\n		from {\n			transform: scale(0);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1);\n			opacity: 1;\n		}\n	}\n\n	@keyframes svelte-1ee93ns-secondLineAnimation {\n		from {\n			transform: scale(0) rotate(90deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(90deg);\n			opacity: 1;\n		}\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/LoaderIcon.svelte
var frag3 = template(`<div class="svelte-1j7dflg"></div>`);
function LoaderIcon($$anchor, $$props) {
  if (new.target === LoaderIcon)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  let primary = prop($$props, "primary", 0, "#616161");
  let secondary = prop($$props, "secondary", 0, "#e0e0e0");
  var div = open($$anchor, true, frag3);
  render_effect(() => {
    style(div, "--primary", primary());
    style(div, "--secondary", secondary());
  });
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-1j7dflg", "\n	div.svelte-1j7dflg {\n		width: 12px;\n		height: 12px;\n		box-sizing: border-box;\n		border: 2px solid;\n		border-radius: 100%;\n		border-color: var(--secondary, #e0e0e0);\n		border-right-color: var(--primary, #616161);\n		animation: svelte-1j7dflg-rotate 1s linear infinite;\n	}\n\n	@keyframes svelte-1j7dflg-rotate {\n		from {\n			transform: rotate(0deg);\n		}\n		to {\n			transform: rotate(360deg);\n		}\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/ToastIcon.svelte
var frag_1 = template(`<div class="animated svelte-1kgeier"> </div>`);
var frag_6 = template(`<div class="status svelte-1kgeier"><!></div>`);
var frag_5 = template(`<div class="indicator svelte-1kgeier"><!> <!></div>`);
function ToastIcon($$anchor, $$props) {
  if (new.target === ToastIcon)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  const type = mutable_source();
  const icon = mutable_source();
  const iconTheme = mutable_source();
  pre_effect(() => {
    $$props.toast;
    untrack(() => {
      (() => {
        const tmp = $$props.toast;
        set(type, tmp.type), set(icon, tmp.icon), set(iconTheme, tmp.iconTheme);
        return tmp;
      })();
    });
  });
  var fragment = comment($$anchor);
  var node = child_frag(fragment);
  if_block(
    node,
    () => typeof get(icon) === "string",
    ($$anchor2) => {
      var div = open($$anchor2, true, frag_1);
      var text = child(div);
      text_effect(text, () => get(icon));
      close($$anchor2, div);
    },
    ($$anchor2) => {
      var fragment_1 = comment($$anchor2);
      var node_1 = child_frag(fragment_1);
      if_block(
        node_1,
        () => typeof get(icon) !== "undefined",
        ($$anchor3) => {
          var fragment_2 = comment($$anchor3);
          var node_2 = child_frag(fragment_2);
          component(node_2, () => get(icon), ($$component) => {
            validate_dynamic_component(() => {
              validate_component($$component)(node_2, {});
            });
          });
          close_frag($$anchor3, fragment_2);
        },
        ($$anchor3) => {
          var fragment_3 = comment($$anchor3);
          var node_3 = child_frag(fragment_3);
          if_block(
            node_3,
            () => get(type) !== "blank",
            ($$anchor4) => {
              var div_1 = open($$anchor4, true, frag_5);
              var node_4 = child(div_1);
              var node_5 = sibling(sibling(node_4));
              validate_component(LoaderIcon)(node_4, spread_props(() => get(iconTheme)));
              if_block(
                node_5,
                () => get(type) !== "loading",
                ($$anchor5) => {
                  var div_2 = open($$anchor5, true, frag_6);
                  var node_6 = child(div_2);
                  if_block(
                    node_6,
                    () => get(type) === "error",
                    ($$anchor6) => {
                      var fragment_4 = comment($$anchor6);
                      var node_7 = child_frag(fragment_4);
                      validate_component(ErrorIcon)(node_7, spread_props(() => get(iconTheme)));
                      close_frag($$anchor6, fragment_4);
                    },
                    ($$anchor6) => {
                      var fragment_5 = comment($$anchor6);
                      var node_8 = child_frag(fragment_5);
                      validate_component(CheckmarkIcon)(node_8, spread_props(() => get(iconTheme)));
                      close_frag($$anchor6, fragment_5);
                    }
                  );
                  close($$anchor5, div_2);
                },
                null
              );
              close($$anchor4, div_1);
            },
            null
          );
          close_frag($$anchor3, fragment_3);
        }
      );
      close_frag($$anchor2, fragment_1);
    }
  );
  close_frag($$anchor, fragment);
  pop();
  append_styles($$anchor, "svelte-1kgeier", "\n	.indicator.svelte-1kgeier {\n		position: relative;\n		display: flex;\n		justify-content: center;\n		align-items: center;\n		min-width: 20px;\n		min-height: 20px;\n	}\n\n	.status.svelte-1kgeier {\n		position: absolute;\n	}\n\n	.animated.svelte-1kgeier {\n		position: relative;\n		transform: scale(0.6);\n		opacity: 0.4;\n		min-width: 20px;\n		animation: svelte-1kgeier-enter 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n	}\n\n	@keyframes svelte-1kgeier-enter {\n		from {\n			transform: scale(0.6);\n			opacity: 0.4;\n		}\n		to {\n			transform: scale(1);\n			opacity: 1;\n		}\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/ToastMessage.svelte
var frag4 = template(`<div><!></div>`);
function ToastMessage($$anchor, $$props) {
  if (new.target === ToastMessage)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  var div = open($$anchor, true, frag4);
  let spread_attributes;
  var node = child(div);
  spread_attributes_effect(
    div,
    () => [
      { class: "message" },
      $$props.toast.ariaProps
    ],
    true,
    "svelte-1nauejd"
  );
  if_block(
    node,
    () => typeof $$props.toast.message === "string",
    ($$anchor2) => {
      var node_1 = space($$anchor2);
      text_effect(node_1, () => $$props.toast.message);
      close($$anchor2, node_1);
    },
    ($$anchor2) => {
      var fragment_1 = comment($$anchor2);
      var node_2 = child_frag(fragment_1);
      component(node_2, () => $$props.toast.message, ($$component) => {
        validate_dynamic_component(() => {
          validate_component($$component)(node_2, {
            get toast() {
              return readonly($$props.toast);
            }
          });
        });
      });
      close_frag($$anchor2, fragment_1);
    }
  );
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-1nauejd", "\n	.message.svelte-1nauejd {\n		display: flex;\n		justify-content: center;\n		margin: 4px 10px;\n		color: inherit;\n		flex: 1 1 auto;\n		white-space: pre-line;\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/ToastBar.svelte
var fallback = template(`<!> <!>`, true);
var frag5 = template(`<div><!></div>`);
function ToastBar($$anchor, $$props) {
  if (new.target === ToastBar)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  let position = prop($$props, "position", 8, () => void 0);
  let style2 = prop($$props, "style", 0, "");
  let Component = prop($$props, "Component", 8, () => void 0);
  let factor = mutable_source();
  let animation = mutable_source();
  pre_effect(() => {
    $$props.toast, position();
    untrack(() => {
      const top = ($$props.toast.position || position() || "top-center").includes("top");
      set(factor, top ? 1 : -1);
      const [enter, exit] = prefersReducedMotion() ? ["fadeIn", "fadeOut"] : ["enter", "exit"];
      set(animation, $$props.toast.visible ? enter : exit);
    });
  });
  var div = open($$anchor, true, frag5);
  var node = child(div);
  var div_style;
  render_effect(() => {
    class_name(div, `base ${stringify($$props.toast.height ? get(animation) : "transparent")} ${stringify($$props.toast.className || "")} svelte-ug60r4`);
    if (div_style !== (div_style = `${stringify(style2())}; ${stringify($$props.toast.style)}`)) {
      attr(div, "style", div_style);
    }
    style(div, "--factor", get(factor));
  });
  if_block(
    node,
    Component,
    ($$anchor2) => {
      var fragment = comment($$anchor2);
      var node_1 = child_frag(fragment);
      component(node_1, Component, ($$component) => {
        validate_dynamic_component(() => {
          validate_component($$component)(node_1, {
            $$slots: {
              icon: ($$anchor3, $$slotProps) => {
                var fragment_1 = comment($$anchor3);
                var node_2 = child_frag(fragment_1);
                validate_component(ToastIcon)(node_2, {
                  get toast() {
                    return readonly($$props.toast);
                  },
                  slot: "icon"
                });
                close_frag($$anchor3, fragment_1);
              },
              message: ($$anchor3, $$slotProps) => {
                var fragment_2 = comment($$anchor3);
                var node_3 = child_frag(fragment_2);
                validate_component(ToastMessage)(node_3, {
                  get toast() {
                    return readonly($$props.toast);
                  },
                  slot: "message"
                });
                close_frag($$anchor3, fragment_2);
              }
            }
          });
        });
      });
      close_frag($$anchor2, fragment);
    },
    ($$anchor2) => {
      var fragment_3 = comment($$anchor2);
      var node_4 = child_frag(fragment_3);
      slot(
        node_4,
        $$props.children,
        {
          ToastIcon,
          ToastMessage,
          get toast() {
            return $$props.toast;
          }
        },
        ($$anchor3) => {
          var fragment_4 = open_frag($$anchor3, true, fallback);
          var node_5 = child_frag(fragment_4);
          var node_6 = sibling(sibling(node_5));
          validate_component(ToastIcon)(node_5, {
            get toast() {
              return readonly($$props.toast);
            }
          });
          validate_component(ToastMessage)(node_6, {
            get toast() {
              return readonly($$props.toast);
            }
          });
          close_frag($$anchor3, fragment_4);
        }
      );
      close_frag($$anchor2, fragment_3);
    }
  );
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-ug60r4", "\n	@keyframes svelte-ug60r4-enterAnimation {\n		0% {\n			transform: translate3d(0, calc(var(--factor) * -200%), 0) scale(0.6);\n			opacity: 0.5;\n		}\n		100% {\n			transform: translate3d(0, 0, 0) scale(1);\n			opacity: 1;\n		}\n	}\n\n	@keyframes svelte-ug60r4-exitAnimation {\n		0% {\n			transform: translate3d(0, 0, -1px) scale(1);\n			opacity: 1;\n		}\n		100% {\n			transform: translate3d(0, calc(var(--factor) * -150%), -1px) scale(0.6);\n			opacity: 0;\n		}\n	}\n\n	@keyframes svelte-ug60r4-fadeInAnimation {\n		0% {\n			opacity: 0;\n		}\n		100% {\n			opacity: 1;\n		}\n	}\n\n	@keyframes svelte-ug60r4-fadeOutAnimation {\n		0% {\n			opacity: 1;\n		}\n		100% {\n			opacity: 0;\n		}\n	}\n\n	.base.svelte-ug60r4 {\n		display: flex;\n		align-items: center;\n		background: #fff;\n		color: #363636;\n		line-height: 1.3;\n		will-change: transform;\n		box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n		max-width: 350px;\n		pointer-events: auto;\n		padding: 8px 10px;\n		border-radius: 8px;\n	}\n\n	.transparent.svelte-ug60r4 {\n		opacity: 0;\n	}\n\n	.enter.svelte-ug60r4 {\n		animation: svelte-ug60r4-enterAnimation 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards;\n	}\n\n	.exit.svelte-ug60r4 {\n		animation: svelte-ug60r4-exitAnimation 0.4s cubic-bezier(0.06, 0.71, 0.55, 1) forwards;\n	}\n\n	.fadeIn.svelte-ug60r4 {\n		animation: svelte-ug60r4-fadeInAnimation 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards;\n	}\n\n	.fadeOut.svelte-ug60r4 {\n		animation: svelte-ug60r4-fadeOutAnimation 0.4s cubic-bezier(0.06, 0.71, 0.55, 1) forwards;\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/ToastWrapper.svelte
var frag6 = template(`<div class="wrapper svelte-v01oml"><!></div>`);
function ToastWrapper($$anchor, $$props) {
  if (new.target === ToastWrapper)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  const top = mutable_source();
  const bottom = mutable_source();
  const factor = mutable_source();
  const justifyContent = mutable_source();
  let wrapperEl = mutable_source();
  onMount(() => {
    $$props.setHeight(get(wrapperEl).getBoundingClientRect().height);
  });
  pre_effect(() => {
    $$props.toast;
    untrack(() => {
      var _a;
      set(top, ((_a = $$props.toast.position) == null ? void 0 : _a.includes("top")) ? 0 : null);
    });
  });
  pre_effect(() => {
    $$props.toast;
    untrack(() => {
      var _a;
      set(bottom, ((_a = $$props.toast.position) == null ? void 0 : _a.includes("bottom")) ? 0 : null);
    });
  });
  pre_effect(() => {
    $$props.toast;
    untrack(() => {
      var _a;
      set(factor, ((_a = $$props.toast.position) == null ? void 0 : _a.includes("top")) ? 1 : -1);
    });
  });
  pre_effect(() => {
    $$props.toast;
    untrack(() => {
      var _a, _b, _c;
      set(justifyContent, ((_a = $$props.toast.position) == null ? void 0 : _a.includes("center")) && "center" || (((_b = $$props.toast.position) == null ? void 0 : _b.includes("right")) || ((_c = $$props.toast.position) == null ? void 0 : _c.includes("end"))) && "flex-end" || null);
    });
  });
  var div = open($$anchor, true, frag6);
  bind_this(div, ($$value) => set(wrapperEl, $$value), wrapperEl);
  class_toggle(div, "transition", !prefersReducedMotion());
  var node = child(div);
  render_effect(() => {
    class_toggle(div, "active", $$props.toast.visible);
    style(div, "--factor", get(factor));
    style(div, "--offset", $$props.toast.offset);
    style(div, "top", get(top));
    style(div, "bottom", get(bottom));
    style(div, "justify-content", get(justifyContent));
  });
  if_block(
    node,
    () => $$props.toast.type === "custom",
    ($$anchor2) => {
      var fragment = comment($$anchor2);
      var node_1 = child_frag(fragment);
      validate_component(ToastMessage)(node_1, {
        get toast() {
          return readonly($$props.toast);
        }
      });
      close_frag($$anchor2, fragment);
    },
    ($$anchor2) => {
      var fragment_1 = comment($$anchor2);
      var node_2 = child_frag(fragment_1);
      slot(
        node_2,
        $$props.children,
        {
          get toast() {
            return $$props.toast;
          }
        },
        ($$anchor3) => {
          var fragment_2 = comment($$anchor3);
          var node_3 = child_frag(fragment_2);
          validate_component(ToastBar)(node_3, {
            get toast() {
              return readonly($$props.toast);
            },
            get position() {
              return readonly($$props.toast.position);
            }
          });
          close_frag($$anchor3, fragment_2);
        }
      );
      close_frag($$anchor2, fragment_1);
    }
  );
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-v01oml", "\n	.wrapper.svelte-v01oml {\n		left: 0;\n		right: 0;\n		display: flex;\n		position: absolute;\n		transform: translateY(calc(var(--offset, 16px) * var(--factor) * 1px));\n	}\n\n	.transition.svelte-v01oml {\n		transition: all 230ms cubic-bezier(0.21, 1.02, 0.73, 1);\n	}\n\n	.active.svelte-v01oml {\n		z-index: 9999;\n	}\n\n	.active.svelte-v01oml > * {\n		pointer-events: auto;\n	}\n");
}

// node_modules/svelte-french-toast/dist/components/Toaster.svelte
var frag7 = template(`<div role="alert"></div>`);
function Toaster($$anchor, $$props) {
  if (new.target === Toaster)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false);
  const $$subscriptions = {};
  unsubscribe_on_destroy($$subscriptions);
  const $toasts = () => (validate_store(toasts2, "toasts"), store_get(toasts2, "$toasts", $$subscriptions));
  let reverseOrder = prop($$props, "reverseOrder", 0, false);
  let position = prop($$props, "position", 0, "top-center");
  let toastOptions = prop($$props, "toastOptions", 8, () => void 0);
  let gutter = prop($$props, "gutter", 0, 8);
  let containerStyle = prop($$props, "containerStyle", 8, () => void 0);
  let containerClassName = prop($$props, "containerClassName", 8, () => void 0);
  const { toasts: toasts2, handlers: handlers2 } = useToaster(toastOptions());
  let _toasts = mutable_source();
  pre_effect(() => {
    $toasts(), position(), reverseOrder(), gutter();
    untrack(() => {
      set(_toasts, $toasts().map((toast2) => ({
        ...toast2,
        position: toast2.position || position(),
        offset: handlers2.calculateOffset(toast2, $toasts(), {
          reverseOrder: reverseOrder(),
          gutter: gutter(),
          defaultPosition: position()
        })
      })));
    });
  });
  var div = open($$anchor, true, frag7);
  validate_each_keys(() => get(_toasts), (toast2, $$index) => {
    return unwrap(toast2).id;
  });
  var div_style;
  render_effect(() => {
    class_name(div, `toaster ${stringify(containerClassName() || "")} svelte-1phplh9`);
    if (div_style !== (div_style = containerStyle())) {
      attr(div, "style", div_style);
    }
  });
  event("mouseenter", div, handlers2.startPause, false);
  event("mouseleave", div, handlers2.endPause, false);
  each_keyed(
    div,
    () => get(_toasts),
    13,
    (toast2, $$index) => {
      return unwrap(toast2).id;
    },
    ($$anchor2, toast2, $$index) => {
      var fragment = comment($$anchor2);
      var node = child_frag(fragment);
      validate_component(ToastWrapper)(node, {
        get toast() {
          return readonly(unwrap(toast2));
        },
        setHeight: (height) => handlers2.updateHeight(unwrap(toast2).id, height)
      });
      close_frag($$anchor2, fragment);
    },
    null
  );
  close($$anchor, div);
  pop();
  append_styles($$anchor, "svelte-1phplh9", "\n	.toaster.svelte-1phplh9 {\n		--default-offset: 16px;\n\n		position: fixed;\n		z-index: 9999;\n		top: var(--default-offset);\n		left: var(--default-offset);\n		right: var(--default-offset);\n		bottom: var(--default-offset);\n		pointer-events: none;\n	}\n");
}

// node_modules/svelte-french-toast/dist/index.js
var dist_default = toast_default;
export {
  CheckmarkIcon,
  ErrorIcon,
  LoaderIcon,
  ToastBar,
  ToastIcon,
  Toaster,
  dist_default as default,
  resolveValue,
  toast_default as toast,
  useToaster,
  useToasterStore
};
//# sourceMappingURL=svelte-french-toast.js.map
